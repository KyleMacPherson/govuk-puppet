#!/bin/bash

set -e

# Redirect stdout and stderr to syslog
exec 1> >(/usr/bin/logger -s -t $(basename $0)) 2>&1

# The default Icinga passive alert assumes that the script failed
NAGIOS_CODE=2
NAGIOS_MESSAGE="CRITICAL: Elasticsearch index backup push to S3 failed"

function nagios_passive () {
  printf "<%= @ipaddress %>\t<%= @service_desc %>\t${NAGIOS_CODE}\t${NAGIOS_MESSAGE}\n" | /usr/sbin/send_nsca -H <%= @alert_hostname %> >/dev/null
}

trap nagios_passive EXIT

ES_SNAPSHOT=snapshot_$(date +%F)

# PARAMETERS FOR ELASTICSEARCH SNAPSHOT REPOSITORY
REPO_DATA=$(cat <<EOD
{
  "type": "s3",
  "settings": {
    "bucket": "<%= @s3_bucket -%>",
    "region": "<%= @aws_region -%>",
    <% if scope.lookupvar('::aws_migration') -%>
    "base_path": "elasticsearch",
    <% else -%>
    "access_key": "<%= @aws_access_key_id -%>",
    "secret_key": "<%= @aws_secret_access_key -%>"
    <% end -%>
  },
  "compress": "true"
}
EOD
)

# PARAMETERS FOR ELASTICSEARCH SNAPSHOT
SNAPSHOT_DATA=$(cat <<EOD
{
  "indices": "<%= @json_es_indices -%>",
  "include_global_state": "false",
  "compress": "true",
  "server_side_encryption": "true"
}
EOD
)

/usr/bin/curl --connect-timeout 10 -sS -XPUT "http://127.0.0.1:9200/_snapshot/<%= @es_repo -%>?wait_for_completion=true&pretty" -d "$REPO_DATA"

if [ $? -eq 0 ]; then
  /usr/bin/curl --connect-timeout 10 -sS -XPUT "http://127.0.0.1:9200/_snapshot/<%= @es_repo -%>/${ES_SNAPSHOT}?wait_for_completion=true&pretty" -d "$SNAPSHOT_DATA" &> /dev/null
fi

if [ $? -eq 0 ]; then
  NAGIOS_CODE=0
  NAGIOS_MESSAGE="OK: Elasticsearch backup push to S3 succeeded"
fi
